{
    "abstract": [
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract",
            "text": "Nucleic acid-binding proteins (NABPs), including DNA-binding proteins (DBPs) and RNA-binding proteins (RBPs), play vital roles in gene expression. Accurate identification of these proteins is crucial. However, there are two existing challenges: one is the problem of ignoring DNA-and RNA-binding proteins (DRBPs), and the other is a cross-predicting problem referring to DBP predictors predicting DBPs as RBPs, and vice versa. In this study, we proposed a computational predictor, called DeepMC-iNABP, with the goal of solving these difficulties by utilizing a multiclass classification strategy and deep learning approaches. DBPs, RBPs, DRBPs and non-NABPs as separate classes of data were used for training the DeepMC-iNABP model. The results on test data collected in this study and two independent test datasets showed that DeepMC-iNABP has a strong advantage in identifying the DRBPs and has the ability to alleviate the cross-prediction problem to a certain extent. The web-server of DeepMC-iNABP is freely available at http://www.deepmc-inabp.net/. The datasets used in this research can also be downloaded from the website."
        }
    ],
    "body_text": [
        {
            "cite_spans": [
                {
                    "end": 249,
                    "ref_id": "BIBREF0",
                    "start": 246,
                    "text": "[1]"
                },
                {
                    "end": 253,
                    "ref_id": "BIBREF1",
                    "start": 250,
                    "text": "[2]"
                },
                {
                    "end": 257,
                    "ref_id": "BIBREF2",
                    "start": 254,
                    "text": "[3]"
                },
                {
                    "end": 261,
                    "ref_id": "BIBREF3",
                    "start": 258,
                    "text": "[4]"
                },
                {
                    "end": 265,
                    "ref_id": "BIBREF4",
                    "start": 262,
                    "text": "[5]"
                },
                {
                    "end": 269,
                    "ref_id": "BIBREF5",
                    "start": 266,
                    "text": "[6]"
                },
                {
                    "end": 273,
                    "ref_id": "BIBREF6",
                    "start": 270,
                    "text": "[7]"
                },
                {
                    "end": 341,
                    "ref_id": "BIBREF8",
                    "start": 338,
                    "text": "[8]"
                },
                {
                    "end": 345,
                    "ref_id": "BIBREF9",
                    "start": 342,
                    "text": "[9]"
                },
                {
                    "end": 350,
                    "ref_id": "BIBREF10",
                    "start": 346,
                    "text": "[10]"
                },
                {
                    "end": 355,
                    "ref_id": "BIBREF11",
                    "start": 351,
                    "text": "[11]"
                },
                {
                    "end": 360,
                    "ref_id": "BIBREF12",
                    "start": 356,
                    "text": "[12]"
                },
                {
                    "end": 397,
                    "ref_id": "BIBREF13",
                    "start": 393,
                    "text": "[13,"
                },
                {
                    "end": 401,
                    "ref_id": "BIBREF14",
                    "start": 398,
                    "text": "14]"
                }
            ],
            "ref_spans": [],
            "section": "Introduction",
            "text": "Interactions between proteins and nucleic acids (general terms of DNA and RNA) define and regulate diverse cellular functions, such as splicing, translation, posttranscriptional modifications, protein synthesis, DNA transcription and replication [1] [2] [3] [4] [5] [6] [7] . They are also closely related to some diseases such as cancer [8] [9] [10] [11] [12] and involved in virus infection [13, 14] . Therefore, it is important to accurately identify the proteins that bind to nucleic acids (DNA or RNA)."
        },
        {
            "cite_spans": [
                {
                    "end": 343,
                    "ref_id": "BIBREF16",
                    "start": 339,
                    "text": "[15]"
                },
                {
                    "end": 348,
                    "ref_id": "BIBREF17",
                    "start": 344,
                    "text": "[16]"
                },
                {
                    "end": 353,
                    "ref_id": "BIBREF18",
                    "start": 349,
                    "text": "[17]"
                }
            ],
            "ref_spans": [],
            "section": "Introduction",
            "text": "Nucleic acid-binding proteins (NABPs) are traditionally divided into proteins that have the ability to bind DNA or RNA, namely, DNA-binding proteins (DBPs) and RNA-binding proteins (RBPs). However, there are some proteins that can bind to both DNA and RNA (DRBPs), and these types of protein also play an important role in gene expression [15] [16] [17] . Therefore, accurate identification of DBPs, RBPs and DRBPs is vitally important."
        },
        {
            "cite_spans": [
                {
                    "end": 189,
                    "ref_id": "BIBREF19",
                    "start": 185,
                    "text": "[18,"
                },
                {
                    "end": 193,
                    "ref_id": "BIBREF20",
                    "start": 190,
                    "text": "19]"
                },
                {
                    "end": 324,
                    "ref_id": "BIBREF21",
                    "start": 320,
                    "text": "[20]"
                },
                {
                    "end": 329,
                    "ref_id": "BIBREF22",
                    "start": 325,
                    "text": "[21]"
                },
                {
                    "end": 334,
                    "ref_id": "BIBREF23",
                    "start": 330,
                    "text": "[22]"
                },
                {
                    "end": 339,
                    "ref_id": "BIBREF24",
                    "start": 335,
                    "text": "[23]"
                },
                {
                    "end": 344,
                    "ref_id": "BIBREF25",
                    "start": 340,
                    "text": "[24]"
                },
                {
                    "end": 349,
                    "ref_id": "BIBREF26",
                    "start": 345,
                    "text": "[25]"
                },
                {
                    "end": 543,
                    "ref_id": "BIBREF27",
                    "start": 539,
                    "text": "[26]"
                },
                {
                    "end": 548,
                    "ref_id": "BIBREF28",
                    "start": 544,
                    "text": "[27]"
                },
                {
                    "end": 553,
                    "ref_id": "BIBREF29",
                    "start": 549,
                    "text": "[28]"
                }
            ],
            "ref_spans": [],
            "section": "Introduction",
            "text": "In recent years, with the rapid development of high-throughput sequencing technologies and the reduction of sequencing costs, a large amount of bioinformatics data has been accumulated [18, 19] . Machine learning and deep learning techniques have been widely applied for the analysis of large amounts of biological data [20] [21] [22] [23] [24] [25] . Among them, protein sequences have shown exponential growth, which makes deep learning models for the prediction of nucleic acid-binding proteins from primary sequences strongly feasible [26] [27] [28] ."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction",
            "text": "Existing computational models treat DBP identification and RBP identification as two independent tasks, and most of them are binary-class prediction tasks. Because DBPs and RBPs have high similarities, the existing computational models generally have cross-predicting problems. Cross-prediction refers to the DBP predictor identifying true RBPs as DBPs, whereas the RBP predictor predicts true DBPs as RBPs. Moreover, they usually ignore the existence of DRBPs. That is because in these independent binary-class classification models, only DBPs or RBPs are used to build predictors of DNA binding or RNA binding, respectively. Thus, the predictors identified either ''DBPs and non-DNA binding proteins (non-DBPs)\", or ''RBPs and non-RNA binding proteins (non-RBPs)\"."
        },
        {
            "cite_spans": [
                {
                    "end": 18,
                    "ref_id": "BIBREF1",
                    "start": 15,
                    "text": "[2,"
                },
                {
                    "end": 22,
                    "ref_id": "BIBREF32",
                    "start": 19,
                    "text": "29]"
                },
                {
                    "end": 561,
                    "ref_id": "BIBREF18",
                    "start": 557,
                    "text": "[17]"
                }
            ],
            "ref_spans": [],
            "section": "Introduction",
            "text": "Recent studies [2, 29] on the prediction of nucleic acid-binding residues show that although the existing DNA-binding or RNAbinding residue predictors have strong predictive performance, they cannot discriminate DNA-and RNA-binding residues. Because independent predictors are built using exclusive data (either DNAbinding or RNA-binding residues), they are unable to learn to separate DNA-binding from RNA-binding residues. William et al. revealed through experiments that DRBPs are an important part of cellular proteins and play important cellular roles [17] ."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction",
            "text": "To solve the above problems, in this study, we proposed a new computational predictor called DeepMC-iNABP by applying a multiclass learning strategy to identify NABPs based on deep learning. Four categories, ''DBP\", ''RBP\", ''DRBP\" and ''non-nucleic acid binding protein (non-NABP)\", were defined and used for learning the multiclass classification model. By applying the multiclass classification model based on a convolutional neural network and a recurrent neural network, the DeepMC-iNABP predictor predicts a protein as each of these classes. The DeepMC-iNABP predictor overcomes the problem of cross-predicting because both DBPs and RBPs are used for training the multiclass learning model. DeepMC-iNABP can not only identify nuclei acid-binding protein but also detect DBPs and RBPs, which will help with the functional annotation of proteins. Moreover, because DRBPs as separate class data are used for training, DRBPs can be identified by the DeepMC-iNABP predictor."
        },
        {
            "cite_spans": [
                {
                    "end": 197,
                    "ref_id": "BIBREF33",
                    "start": 193,
                    "text": "[30]"
                },
                {
                    "end": 881,
                    "ref_id": "BIBREF34",
                    "start": 877,
                    "text": "[31]"
                }
            ],
            "ref_spans": [
                {
                    "end": 1573,
                    "ref_id": "TABREF0",
                    "start": 1566,
                    "text": "Table 1"
                }
            ],
            "section": "Data resources",
            "text": "In this study, an initial dataset containing 15,654 DBP chains, 15,009 RBP chains,1,218 DRBP chains and 146,900 non-NABP chains was first collected from the UnitProt Knowledgebase (Uni-ProtKB) [30] . DBP chains were collected by searching reviewed data with the Gene Ontology (GO) annotation keywords ''DNA binding\" and ''NOT RNA binding\", whereas RBP chains were collected by searching reviewed data with the GO annotation keywords ''RNA binding\" and ''NOT DNA binding\". DRBP chains were obtained by searching reviewed data with the GO annotation keywords ''DNA binding\" and ''RNA binding\". Non-NABP chains were collected by searching the reviewed data with the keyword ''NOT nucleic acid binding\". Then, we deleted duplicate chains and filtered the chains with lengths of less than 40 or more than 1,000. The redundancy between each dataset was reduced by the BLASTP program [31] with the bit-score set as greater than 50.0. After data preprocessing, 12,471 DBP chains, 12,068 RBP chains,1,218 DRBP chains and 143,650 non-NABP chains were remained. Then, we randomly selected sequences data to form the final datasets containing 12,000 DBP chains, 12,000 RBP chains,1,200 DRBP chains and 12,000 non-NABP chains. We first split the final dataset into two (training and testing) at a ratio of 10:1. After this, we kept aside the test set and randomly chose 90% of our training data to be the actual training set and the remaining 10% to be the validation set. The statistical information of the training data, validation data and test data we collected is listed in Table 1 ."
        },
        {
            "cite_spans": [
                {
                    "end": 151,
                    "ref_id": "BIBREF35",
                    "start": 147,
                    "text": "[32]"
                },
                {
                    "end": 168,
                    "ref_id": "BIBREF35",
                    "start": 164,
                    "text": "[32]"
                }
            ],
            "ref_spans": [
                {
                    "end": 67,
                    "ref_id": "TABREF1",
                    "start": 60,
                    "text": "Table 2"
                }
            ],
            "section": "Data resources",
            "text": "In this study, we also used two independent test datasets ( Table 2 ) to evaluate the performance of the DeepMC-iNABP predictor, including TEST474 [32] and DRBP206 [32] . Due to very little information found in the prior studies on the identification of DRBPs, TEST474 and DRBP206 are rare independent datasets containing DRBP data. A total of 175 DBP chains, 68 RBP chains, 8 DRBP chains and 233 non-NABP chains collected from the Swiss-Prot database to construct the TEST474 dataset. The DRBP206 dataset contains only 103 DRBP chains, and 103 non-NABP chains were also collected from the Swiss-Prot database."
        },
        {
            "cite_spans": [
                {
                    "end": 188,
                    "ref_id": "BIBREF36",
                    "start": 184,
                    "text": "[33,"
                },
                {
                    "end": 192,
                    "ref_id": "BIBREF37",
                    "start": 189,
                    "text": "34]"
                }
            ],
            "ref_spans": [],
            "section": "Multiclass learning strategy",
            "text": "RBP identification and DBP identification are usually considered two separate prediction tasks in most previous studies, resulting in cross-prediction problems. Although a few studies [33, 34] have focused on the cross-prediction problem for the identification of nucleic acid-binding protein, they obtained low recognition precision, possibly due to the limitations of datasets or sequence feature representations, such as small training datasets and manual selection of sequence features. Here, we treat the identification of NABPs as a multiclass learning task. Multiclass classification refers to the prediction of more than two classes; in fact, there are four protein categories containing DBPs, RBPs, DRBPs and non-NABPs. In multiclass classification, we first design the classifier model, then train the model using training data and validation data, and finally predict the collected test data or independent test data into multiple class labels."
        },
        {
            "cite_spans": [
                {
                    "end": 231,
                    "ref_id": "BIBREF38",
                    "start": 227,
                    "text": "[35,"
                },
                {
                    "end": 235,
                    "ref_id": "BIBREF39",
                    "start": 232,
                    "text": "36]"
                }
            ],
            "ref_spans": [],
            "section": "Multiclass learning strategy",
            "text": "In this study, we applied the ''one-vs.-all\" multiclass classification technique. In one-vs.-all classification, the number of class labels present in the dataset and the number of generated binary classifiers must be the same [35, 36] . Thus, we create four classifiers here for four respective classes. For each data instance, our model will output one variable containing four different values (score) to show the probabilities of the input protein predicted as the corresponding class. The output value with the largest score will be taken as the class predicted by the model. Therefore, a protein can be identified as one of four categories of proteins (DBP, RBP, DRBP or non-NABP)."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Multiclass learning strategy",
            "text": "In this study, we modelled a multiclass classification problem using deep neural networks, including convolutional neural networks (CNNs) and long short-term memory networks (LSTMs). It should be noted that we applied one hot encoding to reshape the categorical variable (label variable) for the data instance to implement this deep multiclass classification model."
        },
        {
            "cite_spans": [
                {
                    "end": 643,
                    "ref_id": "BIBREF40",
                    "start": 639,
                    "text": "[37]"
                },
                {
                    "end": 648,
                    "ref_id": "BIBREF41",
                    "start": 644,
                    "text": "[38]"
                },
                {
                    "end": 653,
                    "ref_id": "BIBREF42",
                    "start": 649,
                    "text": "[39]"
                },
                {
                    "end": 658,
                    "ref_id": "BIBREF43",
                    "start": 654,
                    "text": "[40]"
                },
                {
                    "end": 663,
                    "ref_id": "BIBREF44",
                    "start": 659,
                    "text": "[41]"
                },
                {
                    "end": 668,
                    "ref_id": "BIBREF45",
                    "start": 664,
                    "text": "[42]"
                },
                {
                    "end": 673,
                    "ref_id": "BIBREF46",
                    "start": 669,
                    "text": "[43]"
                },
                {
                    "end": 760,
                    "ref_id": "BIBREF47",
                    "start": 756,
                    "text": "[44,"
                },
                {
                    "end": 764,
                    "ref_id": "BIBREF48",
                    "start": 761,
                    "text": "45]"
                }
            ],
            "ref_spans": [
                {
                    "end": 73,
                    "ref_id": null,
                    "start": 67,
                    "text": "Fig. 1"
                }
            ],
            "section": "Network architecture of DeepMC-iNABP",
            "text": "The fundamental architecture of the DeepMC-iNABP model is shown in Fig. 1 . The architecture outlines several parts: (1) deep representation learning for protein sequences, (2) the combination of the two neural networks (CNN and LSTM), and (3) a multiclass fully connected network. First, one-hot encoding and deep representation learning with neural networks were utilized to convert the protein sequence into a fixed-dimension matrix of vector embeddings. CNNs have the advantage of selecting good feature, and LSTMs have a good ability to learn sequential data, which is of great importance in protein structure and function prediction [37] [38] [39] [40] [41] [42] [43] . In this study, CNN and LSTM were combined for protein sequence feature learning [44, 45] . Moreover, a one-vs.-all multiclass fully connected network was employed to address the cross-prediction problem, in which each of the output nodes represents a different class. More specifically, the network of the DeepMC-iNABP model contains 15 layers, including an input layer, an embedding layer, 3 convolution layers, 3 pooling layers, 4 dropout layers, a long short -term layer, a dense layer, and an output layer."
        },
        {
            "cite_spans": [
                {
                    "end": 271,
                    "ref_id": "BIBREF49",
                    "start": 267,
                    "text": "[46]"
                },
                {
                    "end": 276,
                    "ref_id": "BIBREF50",
                    "start": 272,
                    "text": "[47]"
                },
                {
                    "end": 281,
                    "ref_id": "BIBREF51",
                    "start": 277,
                    "text": "[48]"
                },
                {
                    "end": 339,
                    "ref_id": "BIBREF52",
                    "start": 335,
                    "text": "[49]"
                },
                {
                    "end": 344,
                    "ref_id": "BIBREF53",
                    "start": 340,
                    "text": "[50]"
                },
                {
                    "end": 349,
                    "ref_id": "BIBREF54",
                    "start": 345,
                    "text": "[51]"
                }
            ],
            "ref_spans": [],
            "section": "Sequence representation learning",
            "text": "In protein-related tasks, deep learning approaches can directly learn rich data representations directly from primary sequences instead of manually extracting feature information for protein sequence numeric representation, as in traditional machine learning methods [46] [47] [48] . Deep representation learning in an end-toend model [49] [50] [51] can be relatively easy to implement because the intermediate layers, including sequence embedding layers and other neural network layers for prediction between inputs and outputs, are trained as a whole part (i.e., treated as a ''black box\"). Here, we utilized the widely used end-to-end representation scheme, a one-hot encoding-based deep representation of protein sequences."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Combination of CNNs and LSTMs",
            "text": "In this study, we combine CNNs and LSTMs to conduct a multiclass classification model. Multiple convolutional filters slide over the embedded sequence matrix to produce a new feature map in convolutional layers. In the max-pooling layer, the maximum value is calculated as a feature corresponding feature to the specific filter. Then, the outputs of the max-pooling layer are inputted into the cell of the LSTM layer to learn the longterm dependencies of motifs (features of sequences). The output vectors of the LSTM cells are concatenated and become inputs to the dense layer. A softmax activation function is applied to generate the final outputs containing 4 output values (one for each class). Abbreviations: DBP, DNA-binding protein; RBP, RNA-binding protein; DRBP, DNA-and RNA-binding protein; non-NABP, non-nucleic acid-binding protein. "
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Loss function",
            "text": "The loss function assesses the distance between the predicted output and the actual output to evaluate the performance of the neural network during training. For multiclass classification tasks, the loss function of the neural network usually chooses categorical cross entropy, since one example can be considered to belong to a specific category with probability 1, and to other categories with probability 0. The categorical cross-entropy loss function calculates the loss of an example by computing the following sum:"
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Loss function",
            "text": "where b y i is the i-th value in the model output, y i is the corresponding target value (true value), and N is the number of values in the model output (total number of classes)."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Deep neural network parameters",
            "text": "As the length of input sequence was set to 1,000 (processing of padding or truncating), the number of nodes in the input layers of DeepMC-iNABP model was set as the number of the length of each sequence. As DeepMC-iNABP was designed to implement multiclass classification, the number of nodes in output layer was set just the same as the number of categories, i.e., 4. In embedding layer, the output dimensionality was set to 100 which showed the best performance after comparing the results of serval situations (64, 100, 110, 120). In DeepMC-iNABP, there are three convolutional layers, and the number of filters in each convolutional layer was set to 128, 64, 32; the number of kernels was set to 10, 5, 3, respectively. Max pooling is added to CNNs following individual convolutional layers. A dropout layer was designed after each convolutional part which helps to prevent overfitting, as thedropout layer randomly sets input units to 0 with a frequency of rate at each step during training time. The dropout rate was set to 0.2. The output dimension of the LSTM layer was set to 70. All layers used rectified linear unit (ReLU) activation function except the output layer. The activation function of the output layer used softmax function. For the optimizer, we chose Adam, and the learning rate was set to 0.001. We chose categorical crossentropy loss function, and epoch was set to 100."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Performance evaluation",
            "text": "To evaluate the performance of the prediction, the assessment measurements used herein included accuracy, recall, precision and F1 score. These are defined as follows:"
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Performance evaluation",
            "text": "where TP, TN, FN, and FP are the numbers of true positives, true negatives, false negatives, and false positives, respectively. Among these measures, recall indicates the accuracy of predicting positive samples, precision is the ratio of correctly predicted positive observations to total predicted positive observations, F1 score is the weighted average of precision and recall, and accuracy as the most intuitive performance measure is simply a ratio of correctly predicted observations to total observations. For all measures, the maximum value is 1, and the minimum value is 0. A value of 0 indicates the worst performance, which means that the predicted observations differ greatly from the actual observations, while a value of 1 indicates the best performance, which means that the predicted observations are very close to the actual observations."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Performance evaluation",
            "text": "Moreover, an AU-ROC curve (area under the receiver operating characteristics curve) was used to visualize the performance of the multiclass classification problem in this study. The ROC curve is a graph showing the performance of a classification model at all classification thresholds, which can evaluate classifier output quality. ROC curves typically feature true-positive rates on the Y axis, and false-positive rates on the X axis, which means that a larger area under the curve (AUC) is usually better."
        },
        {
            "cite_spans": [],
            "ref_spans": [
                {
                    "end": 180,
                    "ref_id": "TABREF2",
                    "start": 173,
                    "text": "Table 3"
                },
                {
                    "end": 191,
                    "ref_id": null,
                    "start": 185,
                    "text": "Fig. 2"
                }
            ],
            "section": "Performance of the DeepMC-iNABP predictor on the test data and independent dataset",
            "text": "We evaluated the performance of DeepMC-iNABP on the test data we collected and two dependent datasets (TEST474 and DRBP206 datasets). The corresponding results are shown in Table 3 and Fig. 2 ."
        },
        {
            "cite_spans": [],
            "ref_spans": [
                {
                    "end": 37,
                    "ref_id": null,
                    "start": 30,
                    "text": "Fig. 2A"
                },
                {
                    "end": 463,
                    "ref_id": null,
                    "start": 455,
                    "text": "Fig. 2A)"
                },
                {
                    "end": 969,
                    "ref_id": "TABREF2",
                    "start": 962,
                    "text": "Table 3"
                },
                {
                    "end": 1207,
                    "ref_id": null,
                    "start": 1189,
                    "text": "Fig. 2B, 3C and 3D"
                }
            ],
            "section": "Performance of the DeepMC-iNABP predictor on the test data and independent dataset",
            "text": "The confusion matrix shown in Fig. 2A shows the results of multiclass classification on the test data collected in this study. It shows that 1024 of 1200 total sequences of non-NABPs (Class 0), 848 of 1200 total sequences of DBPs (Class 1), 983 of 1200 total sequences of RBPs (Class 2) and 75 of 120 total sequences of DRBP (Class 3) were correctly identified. Most multiclass data in the test data were correctly classified. From the confusion matrix ( Fig. 2A) , 64 and 112 sequences of the non-NABP class were identified as DBPs and RBPs, respectively; 241 sequences of the DBP class and 182 sequences of the RBP class were identified as non-NABPs. Furthermore, 109 sequences of the DBP class were identified as RBPs, while 31 sequences of the RBP class were identified as DBPs. However, few non-NABPs, DBPs and RBPs were identified as DRBPs. Moreover, the evaluation metrics, including precision, recall, F1 score and accuracy, were calculated, as shown in Table 3 , to assess the performance of the DeepMC-iNABP predictor on the test data we collected. These results indicate that the evaluation values of DBP, RBP, DRBP and non-NABP are good, especially the classification of DRBP. Fig. 2B, 3C and 3D show the ROC curves and AUCs of DeepMC-iNABP on test data collected in this study, TEST474 and DRBP206, respectively."
        },
        {
            "cite_spans": [],
            "ref_spans": [
                {
                    "end": 31,
                    "ref_id": null,
                    "start": 23,
                    "text": "Fig. 2A)"
                },
                {
                    "end": 57,
                    "ref_id": null,
                    "start": 49,
                    "text": "(Fig. 2B"
                },
                {
                    "end": 85,
                    "ref_id": "TABREF2",
                    "start": 76,
                    "text": "(Table 3)"
                },
                {
                    "end": 222,
                    "ref_id": null,
                    "start": 215,
                    "text": "Fig. 2C"
                }
            ],
            "section": "Performance of the DeepMC-iNABP predictor on the test data and independent dataset",
            "text": "The confusion matrix ( Fig. 2A) , ROC-AUC curves (Fig. 2B ) and evaluations (Table 3) indicate that the DeepMC-iNABP predictor achieves good results on the collected test data. Meanwhile, the ROC curves and AUCs in Fig. 2C and 3D also show that the DeepMC-iNABP model preforms well on the two independent test datasets."
        },
        {
            "cite_spans": [],
            "ref_spans": [
                {
                    "end": 198,
                    "ref_id": "TABREF3",
                    "start": 191,
                    "text": "Table 4"
                },
                {
                    "end": 209,
                    "ref_id": null,
                    "start": 203,
                    "text": "Fig. 3"
                }
            ],
            "section": "Comparison with other methods on the independent dataset TEST474",
            "text": "For objective evaluation, we compared our model with other nucleic acid-binding protein classification methods on the independent test dataset TEST474. The predicted results are presented in Table 4 and Fig. 3 ."
        },
        {
            "cite_spans": [
                {
                    "end": 91,
                    "ref_id": "BIBREF35",
                    "start": 87,
                    "text": "[32]"
                },
                {
                    "end": 496,
                    "ref_id": "BIBREF37",
                    "start": 492,
                    "text": "[34]"
                }
            ],
            "ref_spans": [
                {
                    "end": 891,
                    "ref_id": "TABREF3",
                    "start": 884,
                    "text": "Table 4"
                },
                {
                    "end": 916,
                    "ref_id": null,
                    "start": 894,
                    "text": "Fig. 3, Fig. 4A and 4C"
                }
            ],
            "section": "Comparison with other methods on the independent dataset TEST474",
            "text": "To date, there are almost no multiclass classifiers for NABPs. The iDRBP_MMC predictor [32] is actually composed of two binary classifiers (DBP predictor and RBP predictor), not a multiclass classifier. However, the combination of two classifiers can achieve the classification of non-NABP, DBP, RBP and DRBP. The DeepDRBP-2L predictor utilizes a two-level framework, in which the first level detects NABP or not and the second level further identifies the predicted NABP as DBP, RBP or DRBP [34] . In short, the DeepDRBP-2L predictor consists of a binary classifier (the first level) and a multiclass classifier (the second level). Because of the two-level strategy, it can finally achieve the classification of non-NABP, DBP, RBP and DRBP. Thus, we compared with these two existing nucleic acid-binding protein predictors. The evaluation metrics and predicted results have shown in Table 4 , Fig. 3, Fig. 4A and 4C ."
        },
        {
            "cite_spans": [],
            "ref_spans": [
                {
                    "end": 78,
                    "ref_id": null,
                    "start": 70,
                    "text": "(Fig. 3C"
                },
                {
                    "end": 310,
                    "ref_id": null,
                    "start": 296,
                    "text": "Fig. 3A and 4B"
                }
            ],
            "section": "Comparison with other methods on the independent dataset TEST474",
            "text": "DeepMC-iNABP predicted 5 proteins as DRBPs, 4 of which are true DRBPs (Fig. 3C ). The precision, F1 score and recall of DeepMC-iNABP are 0.80, 0.615 and 0.50, respectively. While iDRBP_MMC and DeepDRBP-2L predicted 3 and 23 proteins as DRBPs, respectively, but only one of them was a true DRBP ( Fig. 3A and 4B ). The precision, F1 score and recall of DRBPs in DeepMC-iNABP are far beyond those of iDRBP_MMC and DeepDRBP-2L. For the identification of DBPs and RBPs, DeepMC-iNABP predicted 168 proteins as DBPs, 146 of which were true DBPs, 6 of which were RBPs; 56 proteins were RBPs, of which 40 were true RBPs, and 6 were true DBPs. Whereas DeepDRBP-2L identified 7 proteins of true RBPs as DBPs, and 6 proteins of true DBPs as RBPs; iDRBP_MMC predicted 2 true RBPs as DBPs, and 4 true DBPs as RBPs."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Comparison with other methods on the independent dataset TEST474",
            "text": "According to the results in this study, DeepMC-iNABP alleviates the cross-prediction problem to a certain extent. These results are likely to be related to the multiclass classification strategy adopted in this study, in which DBPs and RBPs as data of different classes were used for training the classification model. However, although a deep neural network-based model is able to automatically learn features from primary protein sequences, because similarity sequences exist between DBPs and RBPs, it may affect sequence representation learning, which may affect the identification of DBPs and RBPs. Further studies that take feature learning of similar sequences for deep neural networks into account will need to be undertaken."
        },
        {
            "cite_spans": [],
            "ref_spans": [
                {
                    "end": 207,
                    "ref_id": "TABREF3",
                    "start": 200,
                    "text": "Table 4"
                }
            ],
            "section": "Comparison with other methods on the independent dataset TEST474",
            "text": "For the prediction of all proteins, including DBPs, RBPs, DRBPs and non-NABPs, the recall, precision and F1 score of DeepMC-iNABP were much better than those of the DeepDRBP-2L predictor, as shown in Table 4 . Compared with the iDRBP_MMC predictor, our model outperforms it at the identification of DRBPs, although it is slightly closer to it at predicting the DBPs, RBPs and non-NABPs. The results show that the identification of DRBPs is a strong point of the DeepMC-iNABP predictor, rather than ignoring the existence of DRBPs like other methods."
        },
        {
            "cite_spans": [],
            "ref_spans": [
                {
                    "end": 210,
                    "ref_id": null,
                    "start": 203,
                    "text": "Fig. 4B"
                },
                {
                    "end": 943,
                    "ref_id": null,
                    "start": 937,
                    "text": "Fig. 5"
                }
            ],
            "section": "Performance for identifying DNA-and RNA-binding proteins",
            "text": "For the purpose of comprehensively evaluating the ability of the DeepMC-iNABP predictor to identify DRBPs, we utilized another independent dataset called DRBP206 which contains only DRBPs and non-NABPs. Fig. 4B presents the performance of DeepMC-iNABP and the existing predictors on the DRBP206 dataset. According to the comparison, the accuracy, recall and F1 score of DeepMC-iNABP on the DRBP206 test dataset were quite higher than those of DeepDRBP-2L and iDRBP_MMC. The precision values of DeepMC-iNABP were slightly better or almost equal to those of iDRBP_MMC but were even better than those of DeepDRBP-2L. Taken together, these results tested on the DRBP206 dataset suggest that DeepMC-iNABP does have a strong advantage in identifying DRBPs. Moreover, feature visualization of represented sequence data also indicates that DeepMC-iNABP model classified the four types of protein sequences well, especially the DRBPs as shown in Fig. 5 ."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Performance for identifying DNA-and RNA-binding proteins",
            "text": "In the current study, comparing our model with some NABP predictors showed that DeepMC-iNABP can successfully identify DRBPs, while few predictors, such as DeepDRBP-2L and iDRBP_MMC introduced above, may have the ability to recognize DRBPs but perform very poorly. A possible explanation for this might be that DeepDRBP-2L or iDRBP_MMC applied binary classification or multilabel classification, whereas the DeepMC-iNABP predictor employed a multiclass classification scheme, and DRBP data as a separate class were used to train the DeepMC-iNABP model."
        },
        {
            "cite_spans": [
                {
                    "end": 326,
                    "ref_id": "BIBREF37",
                    "start": 322,
                    "text": "[34]"
                },
                {
                    "end": 330,
                    "ref_id": null,
                    "start": 329,
                    "text": "b"
                },
                {
                    "end": 394,
                    "ref_id": "BIBREF35",
                    "start": 390,
                    "text": "[32]"
                }
            ],
            "ref_spans": [],
            "section": "Conclusions",
            "text": "There are two challenges in the prediction of NABP: one is the problem of ignoring DRBPs, and the other is the cross-predicting problem. Very little was found in the prior studies. In this study, we focused on these two problems, and proposed a NABP predictor, The results were obtained using the webserver of DeepDRBP-2L [34] . b The results were obtained using the webserver of iDRBP_MMC [32] . called DeepMC-iNABP, with the goal of solving these difficulties by utilizing a multiclass classification strategy and deep learning approaches. The classic deep learning model, the architecture of which contains one-hot encoding-based sequence representation and the combination of deep neural networks (CNN and LSTM), was constructed for identifying the NABPs. DBPs, RBPs, DRBPs and non-NABPs were used as separate classes of data for training the DeepMC-iNABP model. The results on several test datasets showed that DeepMC-iNABP has a strong advantage in identifying DRBPs and alleviates the cross-prediction problem to a certain extent."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions",
            "text": "Moreover, the web server of DeepMC-iNABP (https://www. deepmc-inabp.net/) was provided, which will be useful for researchers in the field of protein-nucleic acid interactions."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Code availability",
            "text": "The web server of DeepMC-iNABP, data resource and codes are freely available from https://www.deepmc-inabp.net/."
        },
        {
            "cite_spans": [],
            "ref_spans": [],
            "section": "Funding",
            "text": "The work was supported by the National Natural Science Foundation of China (No. 61922020, No. 62102064 and No.62101100) and the Special Science Foundation of Quzhou (2021D004)."
        }
    ],
    "metadata": {
        "paper_id": "27c6fb59c4099f27bd6d46930d2b50d1c72824c9",
        "title": "DeepMC-iNABP: Deep learning for multiclass identification and classification of nucleic acid-binding proteins-NC-ND license (http://creative- commons.org/licenses/by-nc-nd/4.0/)"
    }
}